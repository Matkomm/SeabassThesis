1. Define the Classes:
Fish: Represents an individual fish, including its position, velocity, stomach content, feeding state, and responses to different environmental stimuli.
# Spatial movement, 
SeaCage: Represents the sea cage environment, including dimensions, temperature profile, light intensity profile, and the location of food.
Environment: Encapsulates environmental factors such as temperature and light intensity, potentially varying with depth and time.
Simulation: Manages the progression of time and the interactions between the fish and their environment.



2.Implement the Fish Class:
Store the position, orientation, and velocity of the fish.
Implement methods to update the fish's behavior based on the environment and interactions with other fish (avoiding the cage walls, responding to temperature, light, and food).

3.Implement the SeaCage Class:
Define the spatial boundaries and environmental conditions of the sea cage.
Hold a collection of Fish objects and manage their interactions.

4. Implement the Environment Class:
Define how environmental factors such as temperature and light intensity vary with depth and time.
Provide methods to retrieve the environmental conditions at a specific location and time.

5.Implement the Simulation Class:
Progress the simulation time, updating the positions and states of all fish within the sea cage based on their behavioral responses to the environment and each other.
Handle the initialization and termination of the simulation, and provide methods to observe the system state at any point in time.

6.Define the Main Simulation Loop:
Initialize the simulation, creating a SeaCage with a set of Fish objects and an Environment.
For each time step, update the environmental conditions, then update each fish's state and position within the sea cage.
Record or visualize the simulation state as needed.

Temperatur, lys og food
Simuleringslenge

#TODO
Check start postion, fibonacci golden circle, modes if they are ok
food

Check variabel coeffiecent. Read Martins paper, ask him questions.
Sea cage walls is defintely a problem

Problem: Decrease the k_c a lot and the fish does not increase in speed, but they escape the sea cage. 
#Limit direction change to 60 degrees for each time step
#Try to avoid that the speed gets clipped by charastic velocity, but maintain ok speed
#Stocastic and cages still generates a lot of speed. Check java code.
#Go through the code with java updates

#initaliserte du farten med fiskene til 0, så ble farten oppdatert med r_dot? Dvs
fisken har en veldig rask farts endring de første stegene før den stabliserer seg.
R_dot er ny fart ikke fartendringen. 
Endre på charascteric velocity, det som styrer marsj farten. Endre sånn den passer tiden på dagen. 

5000 fisk, 720 steg. 1time ca 10%

New features that should be implemented
Temperature
Feed
Vertical positioning in general #Make it more genral. Top 20% of the sea cages. Standard deviation of % of the depth. 
Neighbour algorithm, get it to lower scaling. FIXED? Play with cell_size
Initialize position in a better way?
